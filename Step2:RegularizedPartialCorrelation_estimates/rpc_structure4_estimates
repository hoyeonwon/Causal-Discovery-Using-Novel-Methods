set.seed(123)
library(corpcor)
library(ppcor)
library(glasso)

results_pc <- list()

for (n_obs in n_obs_values) {
  avg_FP_pc <- matrix(0, nrow = n_variables, ncol = n_variables)
  avg_FN_pc <- matrix(0, nrow = n_variables, ncol = n_variables)
  avg_TP_pc <- matrix(0, nrow = n_variables, ncol = n_variables)
  avg_TN_pc <- matrix(0, nrow = n_variables, ncol = n_variables)

  for (iteration in 1:n_iterations) {

    # Step 1: Generate a random true structure (adjacency matrix)
    a = rnorm(100, mean = 0, sd = 1)
    e = rnorm(100, 0, 1)
    h = rnorm(100, 0, 1)
    j = rnorm(100, 0, 1)
    b = coeff * a + coeff *e + rnorm(100, 0, 1)
    c = coeff * a + rnorm(100, 0, 1)
    d = coeff * b + rnorm(100, 0, 1)
    f = coeff * d + coeff * h + rnorm(100, 0, 1)
    g = coeff * d + coeff * j + rnorm(100, 0, 1)
    i = coeff * f + rnorm(100, 0, 1)

    # Combine variables into a matrix
    sim_data <- cbind(a, b, c, d, e, f, g, h, i, j)

    # Step 2: Calculate for graphical lasso-regularized partial correlation matrix
    glasso_pcor <- sim_to_glasso(sim_data, n_obs, true_structure_four, n_variables)
    
    # Step 3: Initialize evaluation matrices
    FP_pc <- matrix(0, nrow = n_variables, ncol = n_variables)
    FN_pc <- matrix(0, nrow = n_variables, ncol = n_variables)
    TP_pc <- matrix(0, nrow = n_variables, ncol = n_variables)
    TN_pc <- matrix(0, nrow = n_variables, ncol = n_variables)

    # Step 4: Calculate evaluation matrices
    for (i in 1:n_variables) {
      for (j in 1:n_variables) {
        estimated_value <- glasso_pcor[i, j]
        true_value <- true_structure_four[i, j]

        if ((estimated_value != 0) && true_value == 1) {
          TP_pc[i, j] <- TP_pc[i, j] + 1
        } else if ((estimated_value != 0) && true_value == 0) {
          FP_pc[i, j] <- FP_pc[i, j] + 1
        } else if ((estimated_value == 0) && true_value == 1) {
          FN_pc[i, j] <- FN_pc[i, j] + 1
        } else if ((estimated_value == 0) && true_value == 0) {
          TN_pc[i, j] <- TN_pc[i, j] + 1
        }
      }
    }

    # Accumulate evaluation matrices
    avg_FP_pc <- avg_FP_pc + FP_pc
    avg_FN_pc <- avg_FN_pc + FN_pc
    avg_TP_pc <- avg_TP_pc + TP_pc
    avg_TN_pc <- avg_TN_pc + TN_pc
  }

  # Store results
  results_pc[[as.character(n_obs)]] <- list(
    "FP" = avg_FP_pc / n_iterations,
    "FN" = avg_FN_pc / n_iterations,
    "TP" = avg_TP_pc / n_iterations,
    "TN" = avg_TN_pc / n_iterations
  )
}

structurefour_PC_50 <- reassign_diagonals_to_zeros(results_pc[[as.character(50)]])
structurefour_PC_100 <- reassign_diagonals_to_zeros(results_pc[[as.character(100)]])
structurefour_PC_200 <- reassign_diagonals_to_zeros(results_pc[[as.character(200)]])
structurefour_PC_400 <- reassign_diagonals_to_zeros(results_pc[[as.character(400)]])
